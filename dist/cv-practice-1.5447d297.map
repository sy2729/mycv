{"version":3,"sources":["../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/bundle-loader.js","index.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","slice","then","loadBundles","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","executor","promise","prototype","onSuccess","onError","catch","nav","data","$emit","log","header","position","timeout","scrollTop","_timeout","document","documentElement","body","direction","distance","Math","abs","split","setInterval","scrollTo","value","querySelector","offsetTop","$refs","arrow","classList","add","img","createElement","setAttribute","onload","loadText","titleWrap","$props","currentLanguage","reveal","afterReveal","myCallback","headerData","sectionTitle","skillSection","skillBarShort","removeActive","skills","skillData","eachExperience","viewDetailState","experienceSection","experiences","experienceData","eachEducation","educationSection","educations","educationData","eachWork","JSON","parse","stringify","progressBar","width","getBoundingClientRect","progressBarLength","switchType","typeChosen","sideBarInWorkDetail","filteredWorks","i","works","results","filter","allwork","workDetail","currentWork","detail","navigator","appName","lang","language","userLanguage","substr","judgeSystemLanguage","workSection","getScrollDistance","scrolledDistance","initialDistanceBeforeScroll","detectScrollToEnd","querySelectorAll","left","allLength","scrollWidth","viewLength","allWorkLength","scrollHorizontal","scrollLeft","scrollToEnd","node","allWorks","arr","t","j","floor","random","getBarStyle","onscroll","detectScrollDistance","getInitialScrollDistance","addEventListener","loadData","workData","shuffle","creditWidget","template","footer","creditOpened","Vue","workDetailOpened","style","overflow","importLanguage","e","cvData"],"mappings":";;;AAAA,IAAIA,EAAY,KAChB,SAASC,IAKAD,OAJFA,IACSE,EAAAA,KAGPF,EAGT,SAASE,IAEH,IACI,MAAA,IAAIC,MACV,MAAOC,GACHC,IAAAA,GAAW,GAAKD,EAAIE,OAAOC,MAAM,kCACjCF,GAAAA,EACKG,OAAAA,EAAWH,EAAQ,IAIvB,MAAA,IAGT,SAASG,EAAWC,GACX,OAAC,GAAKA,GAAKC,QAAQ,yCAAyC,MAAQ,IAG7EC,QAAQT,aAAeD,EACvBU,QAAQH,WAAaA;;AC5BrB,IAAIN,EAAeU,QAAQ,gBAAgBV,aAE3C,SAASW,EAAgBC,GAClBC,MAAMC,QAAQF,KACP,EAAA,CAACA,IAGTG,IAAAA,EAAKH,EAAQA,EAAQI,OAAS,GAE9B,IACKC,OAAAA,QAAQC,QAAQR,QAAQK,IAC/B,MAAOb,GACHA,GAAa,qBAAbA,EAAIiB,KACC,OAAA,IAAIC,EAAY,SAAUF,EAASG,GAC5BT,EAAAA,EAAQU,MAAM,GAAI,IAC3BC,KAAK,WACGb,OAAAA,QAAQK,KAEhBQ,KAAKL,EAASG,KAIfnB,MAAAA,GAIV,SAASsB,EAAYZ,GACZK,OAAAA,QAAQQ,IAAIb,EAAQc,IAAIC,IAGjC,IAAIC,EAAgB,GACpB,SAASC,EAAqBC,EAAMC,GACpBD,EAAAA,GAAQC,EAGxBC,OAAOvB,QAAUA,QAAUE,EAC3BF,QAAQwB,KAAOT,EACff,QAAQyB,SAAWL,EAEnB,IAAIjB,EAAU,GACd,SAASe,EAAWQ,GACdpB,IAAAA,EAMAH,GALAC,MAAMC,QAAQqB,KACXA,EAAAA,EAAO,GACHA,EAAAA,EAAO,IAGdvB,EAAQuB,GACHvB,OAAAA,EAAQuB,GAGbL,IAAAA,GAAQK,EAAOC,UAAUD,EAAOE,YAAY,KAAO,EAAGF,EAAOnB,SAAWmB,GAAQG,cAChFC,EAAeX,EAAcE,GAC7BS,OAAAA,EACK3B,EAAQuB,GAAUI,EAAavC,IAAiBmC,GACpDZ,KAAK,SAAUiB,GAKPA,OAJHA,GACKL,OAAAA,OAAOD,SAASnB,EAAIyB,GAGtBA,SAPTD,EAYN,SAASnB,EAAYqB,GACdA,KAAAA,SAAWA,EACXC,KAAAA,QAAU,KAGjBtB,EAAYuB,UAAUpB,KAAO,SAAUqB,EAAWC,GAEzC,OADc,OAAjB,KAAKH,UAAkB,KAAKA,QAAU,IAAIzB,QAAQ,KAAKwB,WACpD,KAAKC,QAAQnB,KAAKqB,EAAWC,IAGtCzB,EAAYuB,UAAUG,MAAQ,SAAUD,GAE/B,OADc,OAAjB,KAAKH,UAAkB,KAAKA,QAAU,IAAIzB,QAAQ,KAAKwB,WACpD,KAAKC,QAAQI,MAAMD;;ACyrB5B,aAAA,IAAA,EAtwBA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAEA,QAAA,gBAGA,IAAIE,EAAM,CAAA,SAAA,yNAUA,KAAA,WACK,MAAA,CACM,QAAA,iBACA,QAAA,CACL,CACU,KAAA,OAEV,CACU,KAAA,SAEV,CACU,KAAA,UAEV,CACU,KAAA,WAKb,QAAA,CAAA,aACQC,SAAAA,GACiB,SAAvBA,EAAKV,cACCW,KAAAA,MAAM,iBAAkBD,EAAKV,eAE1BY,QAAAA,IAAI,kBAMxBC,EAAS,CAAA,SAAA,iyBAmBH,KAAA,WACK,MAAA,CACK,OAAA,KAGT,MAAA,CAAC,kBAAmB,cAElB,QAAA,CAAA,SACIC,SAAAA,EAAUC,GACPC,IAIAC,EAJAD,EAAYE,SAASC,gBAAgBH,WAAaE,SAASE,KAAKJ,UAChEK,EAAYP,EAAWE,EAAY,EAAI,GAAK,EAC5CM,EAAWC,KAAKC,IAAIV,EAAWE,GAC/BS,EAAQH,EAAW,GAGnBR,IAAaE,IACHD,EAAAA,GAAW,IACZM,GAAAA,EAEEK,EAAAA,YAAY,WACND,GAAAA,EAET,IADQF,GAAAA,KAAKC,IAAIC,KAEVE,OAAAA,SAAS,EAAGb,GACLG,cAAAA,GACH,EAAA,MAEJU,OAAAA,SAAS,EAAGX,IAExBD,EAAU,OAtBpB,YAyBQ,WACLa,IAAAA,EAAQV,SAASW,cAAc,kBAAkBC,UAChDH,KAAAA,SAASC,EAAO,KA3BpB,WA6BO,WACHG,KAAAA,MAAMC,MAAMC,UAAUC,IAAI,WA9B9B,mBAgCe,WAAA,IAAA,EAAA,KAEZC,EAAMjB,SAASkB,cAAc,OAC7BC,EAAAA,aAAa,MAAO,uFACpBC,EAAAA,OAAS,WACH,EAAA,KACDC,EAAAA,aAtCR,SAyCK,WACDR,KAAAA,MAAMS,UAAUP,UAAUC,IAAI,WA1ClC,aA4CQxB,SAAAA,GACLkB,IAAAA,EAAQV,SAASW,cAAc,iBAAiBC,UAC/CH,KAAAA,SAASC,EAAO,MA9CpB,WAgDMlB,SAAAA,GACG,OAAPA,GAA+C,OAAhC,KAAK+B,OAAOC,gBACrB/B,KAAAA,MAAM,kBAAmB,MACd,OAATD,GAAiD,OAAhC,KAAK+B,OAAOC,iBAC/B/B,KAAAA,MAAM,kBAAmB,QAK9B,WAAA,CACEF,SAAAA,GApFL,QAuFA,WACUkC,eAAAA,OAAO,cAAe,CAAEC,YAAa,KAAKC,aACpDN,KAAAA,YAIF,MAAA,CACW,WAAA,WACL1B,KAAAA,OAAS,KAAK4B,OAAOK,cAKlCC,EAAe,CAAA,SAAA,mNAST,KAAA,WACK,MAAA,IAIL,MAAA,CAAC,QAAS,SAGhBC,EAAe,CAAA,SAAA,g8BAqBT,KAAA,WACK,MAAA,CACI,MAAA,KACM,YAAA,SACC,aAAA,UACC,eAAA,EACP,OAAA,KAIJ,WAAA,CACSD,gBAAAA,GAGZ,QAAA,CAAA,aACS,WACLE,KAAAA,eAAgB,IAGtB,MAAA,CAAC,aAxCO,YAyCF,aAzCE,QA6CN,WACUN,eAAAA,OAAO,cAAe,CAAEC,YAAa,KAAKM,gBAEtD,MAAA,CACU,UAAA,WACJC,KAAAA,OAAS,KAAKV,OAAOW,aAKlCC,EAAiB,CAAA,SAAA,k2CAkCV,MAAA,CAAC,OAAQ,OAAQ,UAAW,YAAa,UAAW,cAAe,UACpE,KAAA,WACK,MAAA,CACc,iBAAA,IAIhB,QAAA,CAAA,SACK,WACDC,KAAAA,iBAAmB,KAAKA,mBAKrCC,EAAoB,CAAA,SAAA,8YASd,KAAA,WACK,MAAA,CACW,aAAA,UACR,MAAA,KACO,YAAA,KAGT,WAAA,CACSR,gBAAAA,EACEM,kBAAAA,GAlBH,YAoBP,aAGN,MAAA,CAAC,kBACD,MAAA,CACe,eAAA,WACTG,KAAAA,YAAc,KAAKf,OAAOgB,kBAMvCC,EAAgB,CAAA,SAAA,4iBAiBT,MAAA,CAAC,SAAU,SAAU,QAAS,YAAa,UAAW,gBAG7DC,EAAmB,CAAA,SAAA,wYASb,KAAA,WACK,MAAA,CACW,aAAA,OACP,MAAA,KACM,YAAA,YACD,WAAA,KAGb,MAAA,CAAC,iBACI,WAAA,CACSZ,gBAAAA,EACCW,iBAAAA,GAEf,MAAA,CACc,cAAA,WACRE,KAAAA,WAAa,KAAKnB,OAAOoB,iBAMtCC,EAAW,CAAA,SAAA,6ZAWJ,MAAA,CAAC,MAAO,OAAQ,UAAW,OAAQ,OAAQ,KAAM,OAAQ,YAAa,UACvE,KAAA,WACK,MAAA,CACW,aAAA,CACH,IAAA,aACE,MAAA,oBACC,OAAA,uBAIb,QAAA,CAAA,aACS,WACNpD,IAAAA,EAAOqD,KAAKC,MAAMD,KAAKE,UAAU,KAAKxB,SACrC9B,KAAAA,MAAM,mBAAoBD,MAMvCwD,EAAc,CAAA,SAAA,2OAMP,MAAA,CAAC,cAAe,aAAc,oBAC/B,KAAA,WACK,MAAA,CACgB,kBAAA,IAGjB,SAAA,CAAA,mBACc,cAbV,QAiBL,WACDC,IAAAA,EAAQ,KAAKpC,MAAMmC,YAAYE,wBAAwBD,MACtDE,KAAAA,kBAAoBF,IAG3BG,EAAa,CAAA,SAAA,4TAQT,KAAA,WACK,MAAA,CACS,WAAA,QAGX,QAAA,CAAA,WACM5D,SAAAA,GACF6D,KAAAA,WAAa7D,EACbC,KAAAA,MAAM,cAAeD,KAG3B,MAAA,CAAC,UAGR8D,GAuCO,EAvCPA,EAAAA,CAAA,SAAA,iZASM,KAAA,WACK,MAAA,CACY,cAAA,GACR,MAAA,KAGR,MAAA,CAAC,aACC,QAAA,CAAA,WACM9D,SAAAA,GAAK,IAAA,EAAA,KACP+D,KAAAA,cAAcrF,IAAI,SAACsF,GACjBhE,IAASgE,EAAEjG,IACLkC,EAAAA,MAAM,qBAAsB+D,MAJxC,WASMhE,SAAAA,GAEHA,GADIE,QAAAA,IAAIF,GACe,QAAvBA,EAAKV,cACAyE,KAAAA,cAAgB,KAAKE,UACvB,CACCC,IAAAA,EAAU,KAAKD,MAAME,OAAO,SAACH,GACzBA,GAAAA,EAAElF,KAAKQ,gBAAkBU,EAAKV,cACvB0E,OAAAA,IAGVD,KAAAA,cAAgBG,MAI1B,QAAA,CAAC,UAAW,YAAa,cACnB,EAAA,EAAA,cAAA,WACJD,KAAAA,MAAQ,KAAKlC,OAAOqC,QACpBL,KAAAA,cAAgB,KAAKE,QAElB,EAAA,EAAA,aAAA,CACOL,cAAAA,IA7CvB,GAkDIS,EAAa,CAAA,SAAA,4+GA4CP,KAAA,WACK,MAAA,CACU,YAAA,GACI,gBAAA,KAGlB,MAAA,CAAC,SAAU,UAAW,aAEjB,WAAA,CACmBP,0BAAAA,GAEtB,QAAA,CAAA,WACM9D,SAAAA,GACFsE,KAAAA,YAActE,EACdqB,KAAAA,MAAMkD,OAAOjE,UAAY,GAH7B,oBAKgB,WAEfxB,GAAQ,YADC0F,UAAUC,QAEfC,IAAAA,EAAOF,UAAUG,cAEjBD,EAAOF,UAAUI,aAErBF,EAAOA,EAAKG,OAAO,EAAG,GAEf7C,KAAAA,gBADC,MAAR0C,EACyB,KAEA,MAhB1B,YAmBO1E,SAAAA,GACI,OAATA,GAA0C,OAAzB,KAAKgC,gBAChBA,KAAAA,gBAAkB,KACP,OAAThC,GAA0C,OAAzB,KAAKgC,kBACxBA,KAAAA,gBAAkB,QA9EtB,YAkFA,WACJsC,KAAAA,YAAc,KAAKvC,OAAOwC,OAC1BO,KAAAA,wBAITC,EAAc,CAAA,SAAA,ivBAaR,KAAA,WACK,MAAA,CACW,aAAA,UACP,MAAA,KACM,YAAA,YACE,cAAA,GACR,MAAA,GACQ,cAAA,EACH,WAAA,GACM,iBAAA,EACL,aAAA,IAGd,MAAA,CAAC,YAAa,YACZ,QAAA,CAAA,qBACiB,WACd7D,IAAAA,EAAQ,KAAK8D,oBACZC,KAAAA,iBAAmB,KAAKC,4BAA8BhE,EACtDiE,KAAAA,qBAJJ,kBAOc,WACR3E,OAAAA,SAAS4E,iBAAiB,cAAc,GAAG1B,wBAAwB2B,MARzE,yBAWqB,WACf7E,OAAAA,SAASW,cAAc,oBAAoBuC,wBAAwB2B,MAZzE,YAcQ,WACLC,IAAAA,EAAY,KAAKjE,MAAM4C,MAAMsB,YAC7BC,EAAa,KAAKnE,MAAM4C,MAAMP,wBAAwBD,MACrD+B,KAAAA,WAAaA,EACbC,KAAAA,cAAgBH,GAlBpB,YAoBQ,WACJI,KAAAA,iBAAiB,KAAKrE,MAAM4C,MAAO,KAAK5C,MAAM4C,MAAM0B,WAAa,IAAK,KAEtER,KAAAA,qBAvBJ,kBAyBc,WACX,KAAKF,iBAAmB,KAAKO,YAAc,KAAKC,cAC3CG,KAAAA,aAAc,EAEdA,KAAAA,aAAc,GA7BtB,eAgCU5F,SAAAA,GACNC,KAAAA,MAAM,mBAAoBD,IAjC9B,iBAmCY6F,SAAAA,EAAMzF,EAAUC,GACzBsF,IAIApF,EAJAoF,EAAaE,EAAKF,WAClBhF,EAAYP,EAAWuF,EAAa,EAAI,GAAK,EAC7C/E,EAAWC,KAAKC,IAAIV,EAAWuF,GAC/B5E,EAAQH,EAAW,GAGnBR,IAAauF,IACHtF,EAAAA,GAAW,IACZM,GAAAA,EAEEK,EAAAA,YAAY,WACLD,GAAAA,EAEV,IADQF,GAAAA,KAAKC,IAAIC,KAEZ4E,EAAAA,WAAavF,EACJG,cAAAA,GACH,EAAA,MAENoF,EAAAA,WAAaA,GAEvBtF,EAAU,OAxDhB,WA4DML,SAAAA,GACJA,GAAuB,QAAvBA,EAAKV,cACCyE,KAAAA,cAAgBV,KAAKC,MAAMD,KAAKE,UAAU,KAAKU,YAClD,CACEC,IAAAA,EAAU,KAAKD,MAAM6B,SAAS3B,OAAO,SAACH,GAClCA,GAAAA,EAAElF,KAAKQ,gBAAkBU,EAAKV,cACvB0E,OAAAA,IAGVD,KAAAA,cAAc+B,SAAW5B,IArEjC,QAwEG6B,SAAAA,GAEG/B,IADHA,IAAgBgC,EAAGC,EAAnBjC,EAAI+B,EAAI/H,OACLgG,GACCnD,EAAAA,KAAKqF,MAAMrF,KAAKsF,SAAWnC,KAC3B+B,EAAAA,EAAI/B,GACJA,EAAAA,GAAK+B,EAAIE,GACTA,EAAAA,GAAKD,GA9EZ,SAiFK,WACDjC,KAAAA,cAAgBV,KAAKC,MAAMD,KAAKE,UAAU,KAAKU,UAGhD,WAAA,CACS5B,gBAAAA,EACJe,YAAAA,EACGI,eAAAA,EACDI,cAAAA,GApHL,QAsHL,WAAA,IAAA,EAAA,KAEAwC,KAAAA,cAGA/E,KAAAA,MAAM4C,MAAMoC,SAAW,KAAKC,qBAE5BpB,KAAAA,4BAA8B,KAAKqB,2BAGjCC,OAAAA,iBAAiB,SAAU,WACzBJ,EAAAA,cACAlB,EAAAA,4BAA8B,EAAKqB,6BAE7BtE,eAAAA,OAAO,gBAAiB,CAAEC,YAAa,KAAKuE,YApIjD,QAsIL,WAEAL,KAAAA,cACAjB,KAAAA,qBAEF,MAAA,CACS,SAAA,WACHlB,KAAAA,MAAQ,KAAKlC,OAAO2E,SACpBC,KAAAA,QAAQ,KAAK1C,MAAM6B,aAOhCc,EAAe,CACfC,SAAAA,8LASAC,EAAS,CAAA,SAAA,wyBAuBH,KAAA,WACK,MAAA,CACW,aAAA,UACP,MAAA,yBACE,QAAA,iBACF,MAAA,CACH,CACU,KAAA,OACA,KAAA,6BAEV,CACU,KAAA,SACA,KAAA,8BAGA,cAAA,IAGb,QAAA,CAAA,WACO,WACHC,KAAAA,cAAe,GAFnB,YAIQ,WACJA,KAAAA,cAAe,IAIhB,WAAA,CACSH,gBAAAA,IAKzB,IAAII,IAAI,CACA,GAAA,OACE,KAAA,CACU,WAAA,GACM,kBAAA,EACR,SAAA,KACC,UAAA,CAAC,MAAO,MAAO,SAAU,SAC5B,OAAA,GACS,gBAAA,IAGZ,QAAA,CAAA,eACUhH,SAAAA,GACNqE,KAAAA,WAAarE,EACbiH,KAAAA,kBAAmB,EACfvG,SAAAA,KAAKwG,MAAMC,SAAW,UAJ9B,YAMQ,WACJF,KAAAA,kBAAmB,EACfvG,SAAAA,KAAKwG,MAAMC,SAAW,SAR9B,oBAUiB,WAEdrI,GAAQ,YADD0F,UAAUC,QAEbC,IAAAA,EAAOF,UAAUG,cAEjBD,EAAOF,UAAUI,aAErBF,EAAOA,EAAKG,OAAO,EAAG,GAEjB7C,KAAAA,gBADG,MAAR0C,EACuB,KAEA,MArB1B,eAwBU1E,SAAAA,GACD,OAAPA,EACMgC,KAAAA,gBAAkB,KACP,OAAThC,IACFgC,KAAAA,gBAAkB,MAEtBoF,KAAAA,eAAe,KAAKpF,kBA9BxB,eAgCUhC,SAAAA,GAAM,IAAA,EAAA,KACJ,OAATA,EACO,QAAA,iBAAA,CAAA,QAAA,QAAA,WAAUzB,KAAK,SAAC8I,GACdC,EAAAA,OAASD,EAAEC,SAIb,QAAA,iBAAA,CAAA,QAAA,QAAA,cAAa/I,KAAK,SAAC8I,GACjBC,EAAAA,OAASD,EAAEC,WAnD5B,YAwDS,WACJxC,KAAAA,sBACAsC,KAAAA,eAAe,KAAKpF,kBAGnB,SAAA,GAIE,WAAA,CACU7B,iBAAAA,EACDmC,gBAAAA,EACKO,qBAAAA,EACDI,oBAAAA,EACL8B,eAAAA,EACE+B,iBAAAA,EACHzC,cAAAA","file":"cv-practice-1.5447d297.map","sourceRoot":"..","sourcesContent":["var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","// import {  } from \"./index.scss\";\n// import { cvData } from \"./data\";\nimport \"./index.scss\";\n\n// create component\nvar nav = {\n    template: `\n        <nav>\n            <img :src=logoImg>\n            <ul class='nav-options'>\n                <li v-for='i in navList' @click='chooseToView(i.name)'>{{i.name}}</li>\n            </ul>\n        </nav>\n    `,\n\n    data: function(){\n        return {\n            logoImg: './img/logo.png',\n            navList: [\n                {\n                    name: 'Web'\n                },\n                {\n                    name: 'Video'\n                },\n                {\n                    name: 'Design'\n                },\n                {\n                    name: 'Blog'\n                },\n            ]\n        }\n    },\n    methods: {\n        chooseToView(data){\n            if(data.toLowerCase() !== 'blog') {\n                this.$emit('choose-to-view', data.toLowerCase());\n            }else {\n                console.log('choose blog');\n            }\n        }\n    }\n};\n/* <div class=\"header-layer\" ref='overlay'></div> */\nvar header = {\n    template: `\n        <div class=\"header\">\n\n            <cv-nav @choose-to-view='headerSelect'></cv-nav>\n\n            <div class=\"title-wrap\" ref='titleWrap'>\n                <h4 class=\"subtitle\">{{header.greeting || 'nihao'}}</h4>\n                <h1 class=\"title\">{{header.name || 'Wait Please'}}</h1>\n                <div class='arrow-wrap' @click=arrowScroll ref='arrow'><i class=\"fa fa-arrow-down\"></i></div>\n            </div>\n\n            <div class='language-switch'>\n                <span :class=\"['option', {'active': currentLanguage === 'en'}]\" @click=\"switchLang('en')\">En</span>\n                <span>／</span>\n                <span :class=\"['option', {'active': currentLanguage === 'zh'}]\" @click=\"switchLang('zh')\">中</span>\n            </div>\n        </div>\n    `,\n    data: function(){\n        return {\n            header: {}\n        }\n    },\n    props: ['currentLanguage', 'headerData'],\n\n    methods: {\n        scrollTo(position, timeout){\n                var scrollTop = document.documentElement.scrollTop || document.body.scrollTop,\n                    direction = position - scrollTop > 0 ? 1 : -1,\n                    distance = Math.abs(position - scrollTop),\n                    split = distance / 50,\n                    _timeout;\n\n                if (position !== scrollTop) {\n                    timeout = timeout || 1000;\n                    split *= direction;\n\n                    _timeout = setInterval(function () {\n                        scrollTop += split;\n                        distance -= Math.abs(split);\n                        if (0 >= distance) {\n                            window.scrollTo(0, position);\n                            clearInterval(_timeout);\n                            _timeout = null;\n                        } else {\n                            window.scrollTo(0, scrollTop);\n                        }\n                    }, timeout / 100);\n                }\n        },\n        arrowScroll(){\n            let value = document.querySelector('.skill-section').offsetTop;\n            this.scrollTo(value, 20);\n        },\n        myCallback(){\n            this.$refs.arrow.classList.add('active');\n        },\n        detectLayerLoading(){\n            // detect the layer loading\n            let img = document.createElement('img');\n            img.setAttribute(\"src\", 'https://res.cloudinary.com/shuaiyuan/image/upload/v1535384915/cv-img/hero-layer.png');\n            img.onload = ()=>{\n                img = null;\n                this.loadText();\n            }\n        },\n        loadText(){\n            this.$refs.titleWrap.classList.add('active')\n        },\n        headerSelect(data){\n            let value = document.querySelector('.work-section').offsetTop;\n            this.scrollTo(value, 500);\n        },\n        switchLang(data){\n            if(data==='en' && this.$props.currentLanguage !== 'en') {\n                this.$emit('switch-language', 'en')\n            } else if (data === 'zh' && this.$props.currentLanguage !== 'zh') {\n                this.$emit('switch-language', 'zh')\n            }\n        }\n    },\n\n    components: {\n        'cv-nav': nav,\n    },\n\n    mounted(){\n        ScrollReveal().reveal('.arrow-wrap', { afterReveal: this.myCallback });\n        this.loadText();\n        // this.detectLayerLoading();\n\n    },\n    watch: {\n        'headerData': function () {\n            this.header = this.$props.headerData;\n        }\n    }\n}\n\nvar sectionTitle = {\n    template: `\n    <div class='section-title-wrap'>\n        <div class='section-title'>\n            <p class=\"order\">{{order}}.</p>\n            <p class=\"section-name\">{{name}}</p>\n        </div>\n    </div>\n    `,\n    data: function(){\n        return {\n\n        }\n    },\n    props:['order', 'name']\n};\n\nvar skillSection = {\n    template: `\n        <div class=\"skill-section each-section\" :style=\"{background: sectionColor}\">\n            <section-title :order=order :name=skills.sectionName></section-title>\n            <div class='section-content'>\n                <p class=\"content-description\">{{skills.description}}</p>\n                <div :class=\"['skill-wrap', {active: skillBarShort}]\">\n                    <div class=\"each-skill\" v-for='i in skills.allSkills'>\n                        <div class=\"bar-info-wrap\">\n                            <p class='skill-name'>{{i.name}}</p>\n                            <p class=\"skill-extent\">{{i.extent}}%</p>\n                        </div>\n                        <div class=\"bar-outter\">\n                            <div class=\"bar-inner\" :style=\"{width: i.extent + '%'}\"></div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    `,\n    data: function(){\n        return {\n            order: '01',\n            sectionName: 'Skills',\n            sectionColor: '#C93639',\n            skillBarShort: true,\n            skills: [],\n        }\n    },\n\n    components: {\n        'section-title': sectionTitle,\n    },\n\n    methods: {\n        removeActive(){\n            this.skillBarShort = false;\n        }\n    },\n    props: ['skillData'],\n    beforeMount(){\n        \n    },\n\n    mounted(){\n        ScrollReveal().reveal('.skill-wrap', { afterReveal: this.removeActive});\n    },\n    watch: {\n        'skillData': function () {\n            this.skills = this.$props.skillData;\n        }\n    }\n};\n\nvar eachExperience = {\n    template: `\n        <div :class=\"['each-experience', 'each-clickable',{active: activeState, viewDetail: viewDetailState}]\" @click=viewEach>\n             <transition name='show-content'>\n                <div class=\"summary-wrap\" v-if=!viewDetailState>\n                    <div class='experience-logo-wrap'>\n                        <img :src=logo class='experience-logo'>\n                    </div>\n                    <div class=\"experience-info-wrap\">\n                        <div class=\"experience-info\">\n                            <p class='company'>{{company}}</p>\n                            <p class='role'>{{role}}</p>\n                        </div>\n\n                        <p class='experience-date'>\n                            <span>{{beginDate}}</span>\n                                -\n                            <span>{{endDate}}</span>\n                        </p>   \n                    </div>\n                </div>\n             </transition>\n\n            <transition name='show-content'>\n                <div class='experience-detail' v-if=viewDetailState>\n                    <ul>\n                        <li v-for='i in detail.descrip'>{{i}}</li>\n                    </ul>\n                </div>\n            </transition>\n\n            <div class='change-state view-summary' v-if=viewDetailState>Back</div>\n        </div>\n    `,\n    props: ['logo', 'role', 'company', 'beginDate', 'endDate', 'activeState', 'detail'],\n    data: function(){\n        return {\n            viewDetailState: false,\n\n        }\n    },\n    methods: {\n        viewEach(){\n            this.viewDetailState = !this.viewDetailState;\n        }\n    }\n};\n\nvar experienceSection = {\n    template: `\n        <div class=\"experience-section each-section\" :style=\"{background: sectionColor}\">\n             <section-title :order=order :name=experiences.sectionName></section-title>\n             <div class='section-content'>\n                <each-experience v-for='(i, index) in experiences.allExperiences' :key=index v-bind='i'></each-experience>\n             </div>\n        </div>\n    `,\n    data: function(){\n        return {\n            sectionColor: '#FFFFFF',\n            order:'02',\n            experiences: [],\n        }\n    },\n    components: {\n        'section-title': sectionTitle,\n        'each-experience': eachExperience,\n    },\n    beforeMount(){\n        // this.experiences = cvData.experiences;\n    },\n    props: ['experienceData'],\n    watch: {\n        'experienceData': function () {\n            this.experiences = this.$props.experienceData;\n        }\n    }\n};\n\n// education component\nvar eachEducation = {\n    template: `\n        <div :class=\"['each-education', {active: activeState}]\">\n            <div class=\"school-info-wrap\">\n                <div class=\"school-info-sub-wrap\">\n                    <p class=\"school\">{{school}}</p>\n                    <p class=\"major\">{{major}}</p>\n                </div>\n                <p class=\"degree\">{{degree}}</p>\n            </div>\n            <p class=\"education-date\">\n                <span>{{startDate}}</span>\n                    -\n                <span>{{endDate}}</span>\n            </p>\n        </div>\n    `,\n    props: ['school', 'degree', 'major', 'startDate', 'endDate', 'activeState']\n};\n\nvar educationSection = {\n    template: `\n        <div class=\"education-section each-section\" :style=\"{background: sectionColor}\">\n             <section-title :order=order :name=educations.sectionName></section-title>\n             <div class='section-content'>\n                <each-education v-for='(i, index) in educations.allEducations' :key=index v-bind='i'></each-education>\n             </div>\n        </div>\n    `,\n    data: function(){\n        return {\n            sectionColor: '#fff',\n            order: '03',\n            sectionName: 'Education',\n            educations: [],\n        }\n    },\n    props: ['educationData'],\n    components: {\n        'section-title': sectionTitle,\n        'each-education': eachEducation,\n    },\n    watch: {\n        'educationData': function(){\n            this.educations = this.$props.educationData;\n        }\n    }\n};\n\n\nvar eachWork = {\n    template: `\n        <div class=\"each-work\" :style=\"{ 'background-image': 'url(' + img + ')'}\" @click=viewEachWork>\n            <div class='work-cover'>\n                <div class=\"work-info-wrap\">\n                    <h3 class='work-name'>{{name}}</h3>\n                    <span class='current-type'><i :class=\"typeIconCode[type]\"></i></span>\n                </div>\n            </div>\n        </div>\n    `,\n    props: ['img', 'name', 'descrip', 'link', 'tags', 'id', 'type', 'youtubeID', 'biliID'],\n    data: function(){\n        return {\n            typeIconCode: {\n                'web': 'fa fa-code',\n                'video': 'fa fa-play-circle',\n                'design': 'fa fa-paint-brush',\n            }\n        }\n    },\n    methods: {\n        viewEachWork(){\n            let data = JSON.parse(JSON.stringify(this.$props));\n            this.$emit('view-work-detail', data);\n        }\n    }\n\n}\n\nvar progressBar = {\n    template: `\n        <div class='progress-out' ref='progressBar'>\n            <div class=\"progress-in\" :style=\"{width: (viewLength/totalLength) * 100 + '%', left: (scrolledDistance / totalLength) * 100 + '%'}\"></div>\n        </div>\n    `,\n    props: ['totalLength', 'viewLength', 'scrolledDistance'],\n    data: function(){\n        return {\n            progressBarLength: 0,\n        }\n    },\n    computed: {\n        calcScrollDistance(){\n            \n        }\n    },\n    mounted(){\n        let width = this.$refs.progressBar.getBoundingClientRect().width;  \n        this.progressBarLength = width;\n    }\n}\nconst switchType = {\n    template: `\n        <div class='switch-type clearfix'>\n            <ul class='type-wrap'>\n                <li :class=\"{'active': i === typeChosen}\" v-for='(i, index) in types' @click='switchType(i)'>{{i}}<span v-if='index !== types.length - 1' class='type-divide'> /</span></li>\n            </ul>\n        </div>\n    `,\n    data: function () {\n        return {\n            typeChosen: 'all',\n        }\n    },\n    methods: {\n        switchType(data) {\n            this.typeChosen = data;\n            this.$emit('switch-type', data);\n        }\n    },\n    props: ['types'],\n}\n\nvar sideBarInWorkDetail = {\n    template: `\n        <aside class='sideBar'>\n            <switch-type @switch-type=switchType :types=worktypes></switch-type>\n            <ul>\n                <li v-for='i in filteredWorks' :class=\"{'header-bar': i.id === currentId}\" @click='switchWork(i.id)' :data-id=i.id><span class=\"li-name\">{{i.name}}</span> <span class=\"li-tag\">{{i.type}}</span></li>\n            </ul>\n        </aside>\n    `,\n    data: function () {\n        return {\n            filteredWorks: [],\n            works: [],\n        }\n    },\n    props: ['worktypes'],\n    methods: {\n        switchWork(data){\n            this.filteredWorks.map((i)=>{\n                if(data === i.id) {\n                    this.$emit('switch-work-detail', i)\n                }\n            })\n        },\n\n        switchType(data) {\n            console.log(data)\n            if (data.toLowerCase() === 'all') {\n                this.filteredWorks = this.works;\n            } else {\n                let results = this.works.filter((i) => {\n                    if (i.type.toLowerCase() === data.toLowerCase()) {\n                        return i\n                    }\n                });\n                this.filteredWorks = results;\n            };\n        },\n    },\n    props: ['allwork', 'currentId', 'worktypes'],\n    beforeMount(){\n        this.works = this.$props.allwork;\n        this.filteredWorks = this.works;\n    },\n    components: {\n        'switch-type': switchType,\n    }\n\n}\n\nvar workDetail = {\n    template: `\n            <div class='work-detail' ref='detail'>\n                <section class='current-content-wrap'>\n                    <div class='title-wrap'>\n                        <h2 class='title'>{{currentWork.name}}</h2>\n                        <span class='t-color current-work-type'>{{currentWork.type}}</span>\n                        <div class=\"work-link-wrap\" v-if=\"currentWork.type==='web'\">\n                            <a class='link-preview' :href='currentWork.link.preview' title=\"preivew\"><span><i class='fa fa-eye'></i>preview</span></a>\n                            <a :href='currentWork.link.repo' title=\"repo\"><span><i class='fa fa-github'></i>repo</span></a>\n                        </div>\n                        <div class=\"work-link-wrap\" v-if=\"currentWork.type==='video'\">\n                            <a class='link-preview' :href='currentWork.link.youtube' title=\"YouTube - Worldwide Audience\"><span><i class='fa fa-youtube'></i></span></a>\n                            <a :href='currentWork.link.bili' title=\"bilibili - Chinese Audience\"><span><i class='iconfont'>&#xe607;</i></span></a>\n                        </div>\n                        <ul class='tags'>\n                            <li v-for='i in currentWork.tags'>{{i}}</li>\n                        </ul>\n                    </div>\n                    <div class='work-content'>\n                        <div v-for=\"i in currentWork.descrip\" :class=\"[{'each-descrip-img': i.type==='img'},{'work-videoWrapper': i.type==='video'} ]\">\n                            <transition name='show-content'>\n                                <iframe :src=\"i.content.youtube\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen v-if=\"i.type==='video' && currentLanguage === 'en'\"></iframe>\n                                <iframe :src=\"i.content.bili\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen v-if=\"i.type==='video' && currentLanguage === 'zh'\"></iframe>\n                            </transition>\n                            <img :src='i.content' v-if=\"i.type==='img'\">\n                            <p v-html='i.content' v-if=\"i.type==='text'\"></p>\n                        </div>\n\n                        <p class='t-warning' v-if=\"currentWork.type==='video' && currentLanguage === 'zh' && !currentWork.biliID\">!No Bilibili Video Available, please choose other sources</p>\n                        <p class='t-warning' v-if=\"currentWork.type==='video' && currentLanguage === 'en' && !currentWork.youtubeID\">No YouTube Video Available, please choose other sources</p>\n\n                        <div v-if=\"currentWork.type==='video'\" class='video-source-wrap'>\n                            <p>Choose the video source based on your country:</p>\n                            <span @click=\"changeVideo('en')\" :class=\"[{active: currentLanguage === 'en'}, {'no-available': !currentWork.youtubeID}]\">YouTube</span><span @click=\"changeVideo('zh')\" :class=\"[{active: currentLanguage === 'zh'}, {'no-available': !currentWork.biliID}]\" >BiliBili</span>\n                        </div>\n                    </div>\n                </section>\n                <side-bar-in-work-detail :allwork=allwork :currentId=currentWork.id @switch-work-detail=\"switchWork\" :worktypes=worktypes></side-bar-in-work-detail>\n                <div class=\"close\" @click=\"$emit('close-detail')\">\n                    <span><i class=\"fa fa-times\"></i></span>\n                </div>\n            </div>\n    `,\n    data: function(){\n        return {\n            currentWork: {},\n            currentLanguage: '',\n        }\n    },\n    props: ['detail', 'allwork', 'worktypes'],\n\n    components: {\n        \"side-bar-in-work-detail\": sideBarInWorkDetail,\n    },\n    methods: {\n        switchWork(data){\n            this.currentWork = data;\n            this.$refs.detail.scrollTop = 0;\n        },\n        judgeSystemLanguage(){\n            var type = navigator.appName;\n        　　if (type == \"Netscape\"){\n            　　var lang = navigator.language;//获取浏览器配置语言，支持非IE浏览器\n        　　}else{\n            　　var lang = navigator.userLanguage;//获取浏览器配置语言，支持IE5+ == navigator.systemLanguage\n        　　};\n        　　var lang = lang.substr(0, 2);//获取浏览器配置语言前两位\n        　　if (lang == \"zh\"){\n                this.currentLanguage = 'zh';\n            　　}else{\n                this.currentLanguage = 'en';\n            　　}\n        },\n        changeVideo(data){\n            if(data === 'en' && this.currentLanguage !== 'en') {\n                this.currentLanguage = 'en';\n            } else if (data === 'zh' && this.currentLanguage !== 'zh') {\n                this.currentLanguage = 'zh';\n            }\n        },\n    },\n    beforeMount(){\n        this.currentWork = this.$props.detail;\n        this.judgeSystemLanguage();\n    },\n}\n\nvar workSection = {\n    template: `\n        <div class=\"work-section each-section\" :style=\"{background: sectionColor}\">\n            <switch-type :types=worktypes @switch-type=switchType></switch-type>\n             <section-title :order=order :name=works.sectionName></section-title>\n             <div class='section-content' ref='works'>\n                <each-work v-for='(i, index) in filteredWorks.allWorks' :key=index v-bind='i' @view-work-detail=viewWorkDetail></each-work>\n             </div>\n             <button :class=\"['next-btn',{end: scrollToEnd}]\" @click=scrollRight><i class='fa fa-angle-right'></i></button>\n             <progress-bar :totalLength=allWorkLength :viewLength=viewLength :scrolledDistance=scrolledDistance></progress-bar>\n        </div>\n    `,\n\n    data: function(){\n        return {\n            sectionColor: '#F5F5F5',\n            order: '04',\n            sectionName: 'Portfolio',\n            filteredWorks: [],\n            works: [],\n            allWorkLength: 0,\n            viewLength: 20,\n            scrolledDistance: 0,\n            scrollToEnd: false,\n        }\n    },\n    props: ['worktypes', 'workData'],\n    methods: {\n        detectScrollDistance(){\n            let value = this.getScrollDistance();\n            this.scrolledDistance = this.initialDistanceBeforeScroll - value;\n            this.detectScrollToEnd();\n        },\n\n        getScrollDistance(){\n            return document.querySelectorAll('.each-work')[0].getBoundingClientRect().left;\n        },\n\n        getInitialScrollDistance(){\n            return document.querySelector('.section-content').getBoundingClientRect().left;\n        },\n        getBarStyle(){\n            let allLength = this.$refs.works.scrollWidth;\n            let viewLength = this.$refs.works.getBoundingClientRect().width;\n            this.viewLength = viewLength;\n            this.allWorkLength = allLength;\n        },\n        scrollRight(){\n            this.scrollHorizontal(this.$refs.works, this.$refs.works.scrollLeft + 280, 500);\n            // this.$refs.works.scrollLeft = this.$refs.works.scrollLeft + 280;\n            this.detectScrollToEnd();\n        },\n        detectScrollToEnd(){\n            if (this.scrolledDistance + this.viewLength >= this.allWorkLength) {\n                this.scrollToEnd = true;\n            }else {\n                this.scrollToEnd = false;\n            }\n        },\n        viewWorkDetail(data){\n            this.$emit('view-work-detail', data)\n        },\n        scrollHorizontal(node, position, timeout){\n            var scrollLeft = node.scrollLeft,\n                direction = position - scrollLeft > 0 ? 1 : -1,\n                distance = Math.abs(position - scrollLeft),\n                split = distance / 50,\n                _timeout;\n\n            if (position !== scrollLeft) {\n                timeout = timeout || 1000;\n                split *= direction;\n\n                _timeout = setInterval(function () {\n                    scrollLeft += split;\n                    distance -= Math.abs(split);\n                    if (0 >= distance) {\n                        node.scrollLeft = position;\n                        clearInterval(_timeout);\n                        _timeout = null;\n                    } else {\n                        node.scrollLeft = scrollLeft;\n                    }\n                }, timeout / 100);\n            }\n        },\n\n        switchType(data){\n            if(data.toLowerCase() === 'all') {\n                this.filteredWorks = JSON.parse(JSON.stringify(this.works));\n            }else {\n                let results = this.works.allWorks.filter((i) => {\n                    if (i.type.toLowerCase() === data.toLowerCase()) {\n                        return i\n                    }\n                });\n                this.filteredWorks.allWorks = results;\n            };\n        },\n        shuffle(arr) {\n            var i = arr.length, t, j;\n            while (i) {\n                j = Math.floor(Math.random() * i--); //!!!\n                t = arr[i];\n                arr[i] = arr[j];\n                arr[j] = t;\n            } \n        },\n        loadData(){\n            this.filteredWorks = JSON.parse(JSON.stringify(this.works));\n        }\n    },\n    components: {\n        'section-title': sectionTitle,\n        'each-work': eachWork,\n        'progress-bar': progressBar,\n        'switch-type': switchType,\n    },\n    mounted(){\n        // get alllength and view length of the work\n        this.getBarStyle();\n\n        // watch the work scroll\n        this.$refs.works.onscroll = this.detectScrollDistance;\n        // get the initial left value to calculate how long scrolled\n        this.initialDistanceBeforeScroll = this.getInitialScrollDistance();\n\n        // watch the browser resize to recalculate the initial left value\n        window.addEventListener('resize', ()=>{\n            this.getBarStyle();\n            this.initialDistanceBeforeScroll = this.getInitialScrollDistance();\n        });\n        ScrollReveal().reveal('.work-section', { afterReveal: this.loadData });\n    },\n    updated(){\n        // update the scrollbar visual everytime change the work content\n        this.getBarStyle();\n        this.detectScrollToEnd();\n    },\n    watch: {\n        'workData': function(){\n            this.works = this.$props.workData;\n            this.shuffle(this.works.allWorks)\n            // use all works by default\n            // this.filteredWorks = this.works;\n        }\n    }\n}\n\nvar creditWidget = {\n    template: `\n        <div class='credit-wrap'>\n            <p>Credit to XXXXX's Design on Dribbble</p>\n            <div class='close' @click=\"$emit('closeWidget')\">X</div>\n        </div>\n    `,\n\n}\n\nvar footer = {\n    template: `\n        <footer :style=\"{background: sectionColor}\">\n            <div class=\"footer-content\">\n                <p>Get in touch with me!<a :href=\"'mailto:' + email\">Click Here</a></p>\n            </div>\n            <div class=\"footer-footer\">\n                <ul class=\"social-media\">\n                    <li v-for='i in media'><a :href='i.link'>{{i.name}}</a></li>\n                </ul>\n\n                <img :src=logoImg>\n\n                <p class='creat-stamp'>&copy 2018 Made in China</p>\n\n                <div class=\"credit-sign\" @click='openCredit'>?</div>\n                <transition name='jump'>\n                    <credit-widget v-if=\"creditOpened\" @closeWidget=closeWidget></credit-widget>\n                </transition>\n\n            </div>\n        </footer>\n    `,\n    data: function(){\n        return {\n            sectionColor: '#202020',\n            email: 'sy2729@tc.columbia.edu',\n            logoImg: './img/logo.png',\n            media: [\n                {\n                    name: 'Blog',\n                    link: 'https://sy2729.github.io/',\n                },\n                {\n                    name: 'Github',\n                    link: 'https://github.com/sy2729',\n                },\n            ],\n            creditOpened: false,\n        }\n    },\n    methods: {\n        openCredit(){\n            this.creditOpened = true;\n        },\n        closeWidget(){\n            this.creditOpened = false;\n        }\n    },\n\n    components: {\n        'credit-widget': creditWidget,\n    }\n}\n\n// initialize Vue\nnew Vue({\n    el: \"#app\",\n    data: {\n        workDetail: {},\n        workDetailOpened: false,\n        allWorks: null,\n        workTypes: ['all', 'web', 'design', 'video'],\n        cvData: {},\n        currentLanguage: '',\n    },\n\n    methods: {\n        viewWorkDetail(data){\n            this.workDetail = data;\n            this.workDetailOpened = true;\n            document.body.style.overflow = 'hidden';\n        },\n        closeDetail(){\n            this.workDetailOpened = false;\n            document.body.style.overflow = 'unset';\n        },\n        judgeSystemLanguage() {\n            var type = navigator.appName;\n            if (type == \"Netscape\") {\n                var lang = navigator.language;//获取浏览器配置语言，支持非IE浏览器\n            } else {\n                var lang = navigator.userLanguage;//获取浏览器配置语言，支持IE5+ == navigator.systemLanguage\n            };\n            var lang = lang.substr(0, 2);//获取浏览器配置语言前两位\n            if (lang == \"zh\") {\n                this.currentLanguage = 'zh';\n            } else {\n                this.currentLanguage = 'en';\n            }\n        },\n        switchLanguage(data){\n            if(data===\"zh\") {\n                this.currentLanguage = 'zh';\n            } else if (data === \"en\") {\n                this.currentLanguage = 'en';\n            };\n            this.importLanguage(this.currentLanguage);\n        },\n        importLanguage(data) {\n            if (data === 'en') {\n                import('./data').then((e) => {\n                    this.cvData = e.cvData;\n\n                })\n            } else {\n                import('./data_zh').then((e) => {\n                    this.cvData = e.cvData;\n                })\n            }\n        }\n    },\n    beforeMount(){\n        this.judgeSystemLanguage();\n        this.importLanguage(this.currentLanguage);\n    },\n\n    computed: {\n\n    },\n\n    components: {\n        'header-section': header,\n        'skill-section': skillSection,\n        'experience-section': experienceSection,\n        'education-section': educationSection,\n        'work-section': workSection,\n        'footer-section': footer,\n        'work-detail': workDetail,\n    }\n})"]}