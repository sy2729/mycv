{"version":3,"sources":["data.js","index.js"],"names":["cvData","nav","data","toLowerCase","$emit","log","header","position","timeout","scrollTop","_timeout","document","documentElement","body","direction","distance","Math","abs","split","setInterval","scrollTo","value","querySelector","offsetTop","$refs","arrow","classList","add","img","createElement","setAttribute","onload","loadText","titleWrap","reveal","afterReveal","myCallback","detectLayerLoading","sectionTitle","skillSection","skillBarShort","skills","removeActive","eachExperience","viewDetailState","experienceSection","experiences","eachEducation","educationSection","eachWork","JSON","parse","stringify","$props","progressBar","width","getBoundingClientRect","progressBarLength","sideBarInWorkDetail","allwork","map","i","id","workDetail","currentWork","detail","switchType","typeChosen","workSection","getScrollDistance","scrolledDistance","initialDistanceBeforeScroll","querySelectorAll","left","allLength","works","scrollWidth","viewLength","allWorkLength","scrollHorizontal","scrollLeft","node","filteredWorks","results","filter","type","getBarStyle","onscroll","detectScrollDistance","getInitialScrollDistance","addEventListener","creditWidget","template","footer","creditOpened","Vue","workDetailOpened","style","overflow","allWorks"],"mappings":"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","file":"cv-practice-1.35eeba8c.map","sourceRoot":"..","sourcesContent":["\n\n    let cvData = {\n        experiences: [\n            {\n                logo: './img/experience/tc.jpg',\n                role: 'Course Assistant - JavaScript Programming',\n                company: 'Teachers College, Columbia University',\n                beginDate: '2018.09',\n                endDate: 'present',\n                activeState: true,\n                detail: {\n                    descrip: [\n                        'Assist the Instructor in scheduling and operating the class, and grading the work',\n                        'Assist the students with debugging, clarify some coding concepts, especially in JavaScript',\n                        'Creating demo projects in demonstrating concepts being taught in class and as intro to more advanced implementation in JavaScript and interactive web page coding',\n                    ],\n                },\n            },\n            {\n                logo: './img/experience/atos.png',\n                role: 'UX Designer',\n                company: 'Atos',\n                beginDate: '2018.05',\n                endDate: 'present',\n                activeState: true,\n                detail: {\n                    descrip: [\n                        'Collaborate with other designers and design web & mobile products from concept to hi-fi prototypes ',\n                        'Work with developers and support delivering / QA new features',\n                        'Design marketing materials including marketing website, brochures, videos',\n                        'Support user research and gather feedback from users to improve product design',\n                    ],\n                },\n            },\n            {\n                logo: './img/experience/tc.jpg',\n                role: 'Web Developer',\n                company: 'Teachers College, Columbia University',\n                beginDate: '2018.03',\n                endDate: '2018.05',\n                activeState: false,\n                detail: {\n                    descrip: [\n                        \"Assist the TC office of the Web in refreshing the college's website, assist the External Affairs Web Office in transferring current websites to the new site template in T4 content management system\",\n                        'Help with quality assurance testing, and other content migration tasks',\n                        'Help with site style debugging and user experience improvement with CSS solutions',\n                    ],\n                },\n            },\n\n        ],\n        skills: [\n            {\n                name: 'HTML & CSS & JavaSCript',\n                extent: '70'\n            },\n            {\n                name: 'UX / UI Design',\n                extent: '60'\n            },\n            {\n                name: 'Videography',\n                extent: '60'\n            },\n            {\n                name: 'Vue / Riot / Firebase / MVC ...',\n                extent: '70'\n            },\n        ],\n        works: [\n            {\n                name: 'Netease Musice Redev (Mobile)',\n                link: {\n                    preview: `https://sy2729.github.io/music-app/`,\n                    repo: 'https://github.com/sy2729/music-app',\n                },\n                img: './img/1.jpg',\n                id: 1,\n                descrip: [\n                    {\n                        content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`,\n                        type: 'text',\n                    },\n                    {\n                        content: './img/1.jpg',\n                        type: 'img',\n                    },\n                    {\n                        content: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.`,\n                        type: 'text',\n                    },\n                    {\n                        content: './img/1.jpg',\n                        type: 'img',\n                    },\n                ],\n                tags: ['Web Dev', 'UX Design', 'UI Design'],\n                type: 'web',\n            },\n            {\n                name: 'Work 2',\n                link: 'https://sy2729.github.io/style-guide-atos/style-guide.html',\n                img: 'https://z1.muscache.cn/im/pictures/fd5fb67e-9cdc-4111-b8e6-373727c75669.jpg?aki_policy=large',\n                id: 2,\n                descrip: 'xxxxxxxx',\n                tags: ['Web Dev', 'UX Design', 'UI Design'],\n                type: 'video',\n            },\n            {\n                name: 'work 3',\n                link: 'https://sy2729.github.io/style-guide-atos/style-guide.html',\n                img: 'https://z1.muscache.cn/im/pictures/d254f055-afbf-466f-ad24-28e1f678671d.jpg?aki_policy=x_large',\n                id: 3,\n                descrip: 'xxxxxxxx',\n                tags: ['Web Dev', 'UX Design', 'UI Design'],\n                type: 'design',\n            },\n\n        ],\n\n    }\n    \n    \n\nexport { cvData }","// import {  } from \"./index.scss\";\nimport { cvData } from \"./data\";\n\n// create component\nvar nav = {\n    template: `\n        <nav>\n            <img :src=logoImg>\n            <ul class='nav-options'>\n                <li v-for='i in navList' @click='chooseToView(i.name)'>{{i.name}}</li>\n            </ul>\n        </nav>\n    `,\n\n    data: function(){\n        return {\n            logoImg: './img/logo.png',\n            navList: [\n                {\n                    name: 'Web'\n                },\n                {\n                    name: 'Video'\n                },\n                {\n                    name: 'Design'\n                },\n                {\n                    name: 'Blog'\n                },\n            ]\n        }\n    },\n    methods: {\n        chooseToView(data){\n            if(data.toLowerCase() !== 'blog') {\n                this.$emit('choose-to-view', data.toLowerCase());\n            }else {\n                console.log('choose blog');\n            }\n        }\n    }\n};\n\nvar header = {\n    template: `\n        <div class=\"header\">\n            <div class=\"header-layer\" ref='overlay'></div>\n            <cv-nav @choose-to-view='headerSelect'></cv-nav>\n\n            <div class=\"title-wrap\" ref='titleWrap'>\n                <h4 class=\"subtitle\">Hello, I'm</h4>\n                <h1 class=\"title\">Shuai Yuan</h1>\n                <div class='arrow-wrap' @click=arrowScroll ref='arrow'><i class=\"fa fa-arrow-down\"></i></div>\n            </div>\n        </div>\n    `,\n    data: function(){\n        return {\n\n        }\n    },\n\n    methods: {\n        scrollTo(position, timeout){\n                var scrollTop = document.documentElement.scrollTop || document.body.scrollTop,\n                    direction = position - scrollTop > 0 ? 1 : -1,\n                    distance = Math.abs(position - scrollTop),\n                    split = distance / 50,\n                    _timeout;\n\n                if (position !== scrollTop) {\n                    timeout = timeout || 1000;\n                    split *= direction;\n\n                    _timeout = setInterval(function () {\n                        scrollTop += split;\n                        distance -= Math.abs(split);\n                        if (0 >= distance) {\n                            window.scrollTo(0, position);\n                            clearInterval(_timeout);\n                            _timeout = null;\n                        } else {\n                            window.scrollTo(0, scrollTop);\n                        }\n                    }, timeout / 100);\n                }\n        },\n        arrowScroll(){\n            let value = document.querySelector('.skill-section').offsetTop;\n            this.scrollTo(value, 500);\n        },\n        myCallback(){\n            this.$refs.arrow.classList.add('active');\n        },\n        detectLayerLoading(){\n            // detect the layer loading\n            let img = document.createElement('img');\n            img.setAttribute(\"src\", './img/hero-layer.png');\n            img.onload = ()=>{\n                img = null;\n                this.loadText();\n            }\n        },\n        loadText(){\n            this.$refs.titleWrap.classList.add('active')\n        },\n        headerSelect(data){\n            let value = document.querySelector('.work-section').offsetTop;\n            this.scrollTo(value, 500);\n        }\n    },\n\n    components: {\n        'cv-nav': nav,\n    },\n\n    mounted(){\n        ScrollReveal().reveal('.arrow-wrap', { afterReveal: this.myCallback });\n        this.detectLayerLoading();\n\n    }\n}\n\nvar sectionTitle = {\n    template: `\n    <div class='section-title-wrap'>\n        <div class='section-title'>\n            <p class=\"order\">{{order}}.</p>\n            <p class=\"section-name\">{{name}}</p>\n        </div>\n    </div>\n    `,\n    data: function(){\n        return {\n\n        }\n    },\n    props:['order', 'name']\n};\n\nvar skillSection = {\n    template: `\n        <div class=\"skill-section each-section\" :style=\"{background: sectionColor}\">\n            <section-title :order=order :name=sectionName></section-title>\n            <div class='section-content'>\n                <p class=\"content-description\">{{description}}</p>\n                <div :class=\"['skill-wrap', {active: skillBarShort}]\">\n                    <div class=\"each-skill\" v-for='i in skills'>\n                        <div class=\"bar-info-wrap\">\n                            <p class='skill-name'>{{i.name}}</p>\n                            <p class=\"skill-extent\">{{i.extent}}%</p>\n                        </div>\n                        <div class=\"bar-outter\">\n                            <div class=\"bar-inner\" :style=\"{width: i.extent + '%'}\"></div>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div>\n        </div>\n    `,\n    data: function(){\n        return {\n            order: '01',\n            sectionName: 'Skills',\n            description: `I’m passionate about Web Development and User Interface design, with close observation of the latest trends in those design fields. I have solid skills in creating design prototype through front-end development and proficiency of using design software. With my pursuit of aesthetic details, I am able to precisely communicate my idea and design thoughts with my clients and partners.`,\n            sectionColor: '#C93639',\n            skillBarShort: true,\n            skills: [],\n        }\n    },\n\n    components: {\n        'section-title': sectionTitle,\n    },\n\n    methods: {\n        removeActive(){\n            this.skillBarShort = false;\n        }\n    },\n    beforeMount(){\n        this.skills = cvData.skills;\n    },\n\n    mounted(){\n        ScrollReveal().reveal('.skill-wrap', { afterReveal: this.removeActive});\n    }\n};\n\nvar eachExperience = {\n    template: `\n        <div :class=\"['each-experience', 'each-clickable',{active: activeState, viewDetail: viewDetailState}]\" @click=viewEach>\n             <transition name='show-content'>\n                <div class=\"summary-wrap\" v-if=!viewDetailState>\n                    <div class='experience-logo-wrap'>\n                        <img :src=logo class='experience-logo'>\n                    </div>\n                    <div class=\"experience-info-wrap\">\n                        <div class=\"experience-info\">\n                            <p class='company'>{{company}}</p>\n                            <p class='role'>{{role}}</p>\n                        </div>\n\n                        <p class='experience-date'>\n                            <span>{{beginDate}}</span>\n                                -\n                            <span>{{endDate}}</span>\n                        </p>   \n                    </div>\n                </div>\n             </transition>\n\n            <transition name='show-content'>\n                <div class='experience-detail' v-if=viewDetailState>\n                    <ul>\n                        <li v-for='i in detail.descrip'>{{i}}</li>\n                    </ul>\n                </div>\n            </transition>\n\n            <div class='change-state view-summary' v-if=viewDetailState>Back</div>\n        </div>\n    `,\n    props: ['logo', 'role', 'company', 'beginDate', 'endDate', 'activeState', 'detail'],\n    data: function(){\n        return {\n            viewDetailState: false,\n\n        }\n    },\n    methods: {\n        viewEach(){\n            this.viewDetailState = !this.viewDetailState;\n        }\n    }\n};\n\nvar experienceSection = {\n    template: `\n        <div class=\"experience-section each-section\" :style=\"{background: sectionColor}\">\n             <section-title :order=order :name=sectionName></section-title>\n             <div class='section-content'>\n                <each-experience v-for='(i, index) in experiences' :key=index v-bind='i'></each-experience>\n             </div>\n        </div>\n    `,\n    data: function(){\n        return {\n            sectionColor: '#FFFFFF',\n            order:'02',\n            sectionName: 'Experience',\n            experiences: [],\n        }\n    },\n    components: {\n        'section-title': sectionTitle,\n        'each-experience': eachExperience,\n    },\n    beforeMount(){\n        this.experiences = cvData.experiences;\n    }\n};\n\n// education component\nvar eachEducation = {\n    template: `\n        <div :class=\"['each-education', {active: activeState}]\">\n            <div class=\"school-info-wrap\">\n                <div class=\"school-info-sub-wrap\">\n                    <p class=\"school\">{{school}}</p>\n                    <p class=\"major\">{{major}}</p>\n                </div>\n                <p class=\"degree\">{{degree}}</p>\n            </div>\n            <p class=\"education-date\">\n                <span>{{startDate}}</span>\n                    -\n                <span>{{endDate}}</span>\n            </p>\n        </div>\n    `,\n    props: ['school', 'degree', 'major', 'startDate', 'endDate', 'activeState']\n};\n\nvar educationSection = {\n    template: `\n        <div class=\"education-section each-section\" :style=\"{background: sectionColor}\">\n             <section-title :order=order :name=sectionName></section-title>\n             <div class='section-content'>\n                <each-education v-for='(i, index) in educations' :key=index v-bind='i'></each-education>\n             </div>\n        </div>\n    `,\n    data: function(){\n        return {\n            sectionColor: '#fff',\n            order: '03',\n            sectionName: 'Education',\n            educations: [\n                {\n                    school: 'Teachers College, Columbia University',\n                    degree: 'Master',\n                    major: 'Instructional Technology and Media',\n                    startDate: '2017.09',\n                    endDate: '2019.05',\n                    activeState: true,\n                },\n                {\n                    school: 'Central China Normal University',\n                    degree: 'Bachelor',\n                    major: 'Chinese International Education',\n                    startDate: '2013.09',\n                    endDate: '2017.06',\n                },\n                {\n                    school: 'University of California, Berkeley',\n                    degree: 'Exchange',\n                    major: 'General Study',\n                    startDate: '2016.01',\n                    endDate: '2016.06',\n                },\n            ]\n        }\n    },\n    components: {\n        'section-title': sectionTitle,\n        'each-education': eachEducation,\n    }\n};\n\n\nvar eachWork = {\n    template: `\n        <div class=\"each-work\" :style=\"{ 'background-image': 'url(' + img + ')'}\" @click=viewEachWork>\n            <div class='work-cover'>\n                <div class=\"work-info-wrap\">\n                    <h3 class='work-name'>{{name}}</h3>\n                    <span class='current-type'><i :class=\"typeIconCode[type]\"></i></span>\n                </div>\n            </div>\n        </div>\n    `,\n    props: ['img', 'name', 'descrip', 'link', 'tags', 'id', 'type'],\n    data: function(){\n        return {\n            typeIconCode: {\n                'web': 'fa fa-code',\n                'video': 'fa fa-play-circle',\n                'design': 'fa fa-paint-brush',\n            }\n        }\n    },\n    methods: {\n        viewEachWork(){\n            let data = JSON.parse(JSON.stringify(this.$props));\n            this.$emit('view-work-detail', data);\n        }\n    }\n\n}\n\nvar progressBar = {\n    template: `\n        <div class='progress-out' ref='progressBar'>\n            <div class=\"progress-in\" :style=\"{width: (viewLength/totalLength) * 100 + '%', left: (scrolledDistance / totalLength) * 100 + '%'}\"></div>\n        </div>\n    `,\n    props: ['totalLength', 'viewLength', 'scrolledDistance'],\n    data: function(){\n        return {\n            progressBarLength: 0,\n        }\n    },\n    computed: {\n        calcScrollDistance(){\n            \n        }\n    },\n    mounted(){\n        let width = this.$refs.progressBar.getBoundingClientRect().width;  \n        this.progressBarLength = width;\n    }\n}\n\nvar sideBarInWorkDetail = {\n    template: `\n        <aside class='sideBar'>\n            <ul>\n                <li v-for='i in allwork' :class=\"{'header-bar': i.id === currentId}\" @click='switchWork(i.id)' :data-id=i.id>{{i.name}}</li>\n            </ul>\n        </aside>\n    `,\n    data: function () {\n        return {\n\n        }\n    },\n    methods: {\n        switchWork(data){\n            this.$props.allwork.map((i)=>{\n                if(data === i.id) {\n                    this.$emit('switch-work-detail', i)\n                }\n            })\n        }\n    },\n    props: ['allwork', 'currentId'],\n    mounted(){\n        \n    }\n\n}\n\nvar workDetail = {\n    template: `\n            <div class='work-detail'>\n                <section class='current-content-wrap'>\n                    <div class='title-wrap'>\n                        <h2 class='title'>{{currentWork.name}}</h2>\n                        <div class=\"work-link-wrap\">\n                            <a class='link-preview' :href='currentWork.link.preview' title=\"preivew\"><span><i class='fa fa-eye'></i>preview</span></a>\n                            <a :href='currentWork.link.repo' title=\"repo\"><span><i class='fa fa-github'></i>repo</span></a>\n                        </div>\n                        <ul class='tags'>\n                            <li v-for='i in currentWork.tags'>{{i}}</li>\n                        </ul>\n                    </div>\n                    <div class='work-content'>\n                        <div v-for=\"i in currentWork.descrip\">\n                            <img :src='i.content' v-if=\"i.type==='img'\">\n                            <p v-html='i.content' v-if=\"i.type==='text'\"></p>\n                        </div>\n                    </div>\n                </section>\n                <side-bar-in-work-detail :allwork=allwork :currentId=currentWork.id @switch-work-detail=\"switchWork\"></side-bar-in-work-detail>\n                <div class=\"close\" @click=\"$emit('close-detail')\">\n                    <span><i class=\"fa fa-times\"></i></span>\n                </div>\n            </div>\n    `,\n    data: function(){\n        return {\n            currentWork: {},\n        }\n    },\n    props: ['detail', 'allwork'],\n\n    components: {\n        \"side-bar-in-work-detail\": sideBarInWorkDetail,\n    },\n    methods: {\n        switchWork(data){\n            this.currentWork = data;\n        }\n    },\n    beforeMount(){\n        this.currentWork = this.$props.detail;\n    }\n}\n\nconst switchType = {\n    template: `\n        <div class='switch-type clearfix'>\n            <ul class='type-wrap'>\n                <li :class=\"{'active': i === typeChosen}\" v-for='(i, index) in types' @click='switchType(i)'>{{i}}<span v-if='index !== types.length - 1' class='type-divide'> /</span></li>\n            </ul>\n        </div>\n    `,\n    data: function(){\n        return {\n            typeChosen: 'all',\n        }\n    },\n    methods: {\n        switchType(data){\n            this.typeChosen = data;\n            this.$emit('switch-type', data);\n        }\n    },\n    props: ['types'],\n}\n\nvar workSection = {\n    template: `\n        <div class=\"work-section each-section\" :style=\"{background: sectionColor}\">\n            <switch-type :types=workTypes @switch-type=switchType></switch-type>\n             <section-title :order=order :name=sectionName></section-title>\n             <div class='section-content' ref='works'>\n                <each-work v-for='(i, index) in filteredWorks' :key=index v-bind='i' @view-work-detail=viewWorkDetail></each-work>\n             </div>\n             <button class='next-btn' @click=scrollRight><i class='fa fa-angle-right'></i></button>\n             <progress-bar :totalLength=allWorkLength :viewLength=viewLength :scrolledDistance=scrolledDistance></progress-bar>\n        </div>\n    `,\n\n    data: function(){\n        return {\n            sectionColor: '#F5F5F5',\n            order: '04',\n            sectionName: 'Portfolio',\n            workTypes: ['all','web', 'design', 'video'],\n            filteredWorks: [],\n            works: [],\n            allWorkLength: 0,\n            viewLength: 20,\n            scrolledDistance: 0,\n        }\n    },\n    methods: {\n        detectScrollDistance(){\n            let value = this.getScrollDistance();\n            this.scrolledDistance = this.initialDistanceBeforeScroll - value;\n        },\n\n        getScrollDistance(){\n            return document.querySelectorAll('.each-work')[0].getBoundingClientRect().left;\n        },\n\n        getInitialScrollDistance(){\n            return document.querySelector('.section-content').getBoundingClientRect().left;\n        },\n        getBarStyle(){\n            let allLength = this.$refs.works.scrollWidth;\n            let viewLength = this.$refs.works.getBoundingClientRect().width;\n            this.viewLength = viewLength;\n            this.allWorkLength = allLength;\n        },\n        scrollRight(){\n            this.scrollHorizontal(this.$refs.works, this.$refs.works.scrollLeft + 280, 500);\n            // this.$refs.works.scrollLeft = this.$refs.works.scrollLeft + 280;\n        },\n        viewWorkDetail(data){\n            this.$emit('view-work-detail', data)\n        },\n        scrollHorizontal(node, position, timeout){\n            var scrollLeft = node.scrollLeft,\n                direction = position - scrollLeft > 0 ? 1 : -1,\n                distance = Math.abs(position - scrollLeft),\n                split = distance / 50,\n                _timeout;\n\n            if (position !== scrollLeft) {\n                timeout = timeout || 1000;\n                split *= direction;\n\n                _timeout = setInterval(function () {\n                    scrollLeft += split;\n                    distance -= Math.abs(split);\n                    if (0 >= distance) {\n                        node.scrollLeft = position;\n                        clearInterval(_timeout);\n                        _timeout = null;\n                    } else {\n                        node.scrollLeft = scrollLeft;\n                    }\n                }, timeout / 100);\n            }\n        },\n\n        switchType(data){\n            if(data.toLowerCase() === 'all') {\n                this.filteredWorks = this.works;\n            }else {\n                let results = this.works.filter((i) => {\n                    if (i.type.toLowerCase() === data.toLowerCase()) {\n                        return i\n                    }\n                });\n                this.filteredWorks = results;\n            }\n\n        }\n    },\n    components: {\n        'section-title': sectionTitle,\n        'each-work': eachWork,\n        'progress-bar': progressBar,\n        'switch-type': switchType,\n    },\n    beforeMount(){\n        this.works = cvData.works;\n        // use all works by default\n        this.filteredWorks = this.works;\n    },\n    mounted(){\n        // get alllength and view length of the work\n        this.getBarStyle();\n\n        // watch the work scroll\n        this.$refs.works.onscroll = this.detectScrollDistance;\n        // get the initial left value to calculate how long scrolled\n        this.initialDistanceBeforeScroll = this.getInitialScrollDistance();\n\n        // watch the browser resize to recalculate the initial left value\n        window.addEventListener('resize', ()=>{\n            this.getBarStyle();\n            this.initialDistanceBeforeScroll = this.getInitialScrollDistance();\n        });\n\n        // pass all work data to root\n        this.$emit('all-work', this.works)\n    },\n    updated(){\n        // update the scrollbar visual everytime change the work content\n        this.getBarStyle();\n    },\n}\n\nvar creditWidget = {\n    template: `\n        <div class='credit-wrap'>\n            <p>Credit to XXXXX's Design on Dribbble</p>\n            <div class='close' @click=\"$emit('closeWidget')\">X</div>\n        </div>\n    `,\n\n}\n\nvar footer = {\n    template: `\n        <footer :style=\"{background: sectionColor}\">\n            <div class=\"footer-content\">\n                <p>Get in touch with me!<a :href=\"'mailto:' + email\">Click Here</a></p>\n            </div>\n            <div class=\"footer-footer\">\n                <ul class=\"social-media\">\n                    <li v-for='i in media'><a :href='i.link'>{{i.name}}</a></li>\n                </ul>\n\n                <img :src=logoImg>\n\n                <p class='creat-stamp'>&copy 2018 Made in China</p>\n\n                <div class=\"credit-sign\" @click='openCredit'>?</div>\n                <transition name='jump'>\n                    <credit-widget v-if=\"creditOpened\" @closeWidget=closeWidget></credit-widget>\n                </transition>\n\n            </div>\n        </footer>\n    `,\n    data: function(){\n        return {\n            sectionColor: '#202020',\n            email: 'sy2729@tc.columbia.edu',\n            logoImg: './img/logo.png',\n            media: [\n                {\n                    name: 'Blog',\n                    link: 'https://sy2729.github.io/',\n                },\n                {\n                    name: 'Github',\n                    link: 'https://github.com/sy2729',\n                },\n            ],\n            creditOpened: false,\n        }\n    },\n    methods: {\n        openCredit(){\n            this.creditOpened = true;\n        },\n        closeWidget(){\n            this.creditOpened = false;\n        }\n    },\n\n    components: {\n        'credit-widget': creditWidget,\n    }\n}\n\n// initialize Vue\nnew Vue({\n    el: \"#app\",\n    data: {\n        workDetail: {},\n        workDetailOpened: false,\n        allWorks: null,\n    },\n\n    methods: {\n        viewWorkDetail(data){\n            this.workDetail = data;\n            this.workDetailOpened = true;\n            document.body.style.overflow = 'hidden';\n        },\n        closeDetail(){\n            this.workDetailOpened = false;\n            document.body.style.overflow = 'unset';\n        },\n        getAllWork(data){\n            this.allWorks = data;\n        },\n    },\n\n    computed: {\n\n    },\n\n    components: {\n        'header-section': header,\n        'skill-section': skillSection,\n        'experience-section': experienceSection,\n        'education-section': educationSection,\n        'work-section': workSection,\n        'footer-section': footer,\n        'work-detail': workDetail,\n    }\n})"]}